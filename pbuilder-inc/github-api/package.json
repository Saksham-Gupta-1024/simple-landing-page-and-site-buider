{
  "name": "github-api",
  "version": "2.0.0",
  "license": "BSD-3-Clause-Clear",
  "description": "A higher-level wrapper around the Github API.",
  "main": "dist/components/GitHub.js",
  "contributors": [
    {
      "name": "Ændrew Rininsland",
      "email": "aendrew.rininsland@thetimes.co.uk",
      "url": "http://www.aendrew.com"
    },
    {
      "name": "Aurelio De Rosa",
      "email": "a.derosa@audero.it",
      "url": "http://www.audero.it/"
    },
    {
      "name": "Clay Reimann",
      "email": "clayreimann@gmail.com",
      "url": "http://clayreimann.me"
    },
    {
      "name": "Michael Aufreiter",
      "url": "http://substance.io"
    }
  ],
  "readmeFilename": "README.md",
  "scripts": {
    "clean": "gulp clean",
    "build": "gulp build",
    "test": "mocha --opts ./mocha.opts test/*.spec.js",
    "test-verbose": "DEBUG=github* npm test",
    "lint": "gulp lint",
    "make-docs": "node_modules/.bin/jsdoc -c .jsdoc.json --verbose",
    "release": "./release.sh"
  },
  "babel": {
    "presets": [
      "es2015"
    ],
    "plugins": [
      [
        "transform-es2015-modules-umd",
        {
          "globals": {
            "es6-promise": "Promise"
          }
        }
      ]
    ],
    "env": {
      "development": {
        "sourceMaps": "inline"
      }
    }
  },
  "files": [
    "dist/*",
    "lib/*"
  ],
  "dependencies": {
    "axios": "^0.10.0",
    "debug": "^2.2.0",
    "es6-promise": "^3.0.2",
    "js-base64": "^2.1.9",
    "utf8": "^2.1.1"
  },
  "devDependencies": {
    "babel-core": "^6.7.7",
    "babel-plugin-transform-es2015-modules-umd": "^6.5.0",
    "babel-preset-es2015": "^6.5.0",
    "babel-register": "^6.7.2",
    "babelify": "^7.3.0",
    "browserify": "^13.0.0",
    "codecov": "^1.0.1",
    "del": "^2.2.0",
    "eslint-config-google": "^0.5.0",
    "gulp": "^3.9.0",
    "gulp-babel": "^6.1.2",
    "gulp-eslint": "^2.0.0",
    "gulp-jscs": "^3.0.2",
    "gulp-jscs-stylish": "^1.3.0",
    "gulp-rename": "^1.2.2",
    "gulp-sourcemaps": "^1.6.0",
    "gulp-uglify": "^1.5.1",
    "jsdoc": "^3.4.0",
    "minami": "^1.1.1",
    "mocha": "^2.3.4",
    "must": "^0.13.1",
    "vinyl-buffer": "^1.0.0",
    "vinyl-source-stream": "^1.1.0"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/michael/github.git"
  },
  "keywords": [
    "github",
    "api"
  ],
  "gitHead": "aa8aa3c8cd5ce5240373d4fd1d06a7ab4af41a36",
  "bugs": {
    "url": "https://github.com/michael/github/issues"
  },
  "readme": "# Github.js\n\n[![Downloads per month](https://img.shields.io/npm/dm/github-api.svg?maxAge=2592000)][npm-package]\n[![Latest version](https://img.shields.io/npm/v/github-api.svg?maxAge=3600)][npm-package]\n[![Gitter](https://img.shields.io/gitter/room/michael/github.js.svg?maxAge=2592000)][gitter]\n[![Travis](https://img.shields.io/travis/michael/github.svg?maxAge=60)][travis-ci]\n<!-- [![Codecov](https://img.shields.io/codecov/c/github/michael/github.svg?maxAge=2592000)][codecov] -->\n\nGithub.js provides a minimal higher-level wrapper around Github's API. It was concieved in the context of\n[Prose][prose], a content editor for GitHub.\n\n## [Read the docs][docs]\n\n## Installation\nGithub.js is available from `npm` or [npmcdn][npmcdn].\n\n```shell\nnpm install github-api\n```\n\n```html\n<!-- just github-api source (5.3kb) -->\n<script src=\"//npmcdn.com/github-api/dist/GitHub.min.js\"></script>\n\n<!-- standalone (20.3kb) -->\n<script src=\"//npmcdn.com/github-api/dist/GitHub.bundle.min.js\"></script>\n```\n\n## Compatibility\nGithub.js is tested on Node:\n* 5.x\n* 4.x\n* 0.12\n* 0.10\n\n## GitHub Tools\n\nThe team behind Github.js has created a whole organization, called [GitHub Tools](https://github.com/github-tools),\ndedicated to GitHub and its API. In the near future this repository could be moved under the GitHub Tools organization\nas well. In the meantime, we recommend you to take a look at other projects of the organization.\n\n## Samples\n\n```javascript\n/*\n   Data can be retrieved from the API either using callbacks (as in versions < 1.0)\n   or using a new promise-based API. For now the promise-based API just returns the\n   raw HTTP request promise; this might change in the next version.\n */\nvar GitHub = require('github-api');\n\n// unauthenticated client\nvar gh = new GitHub();\nvar gist = gh.getGist(); // not a gist yet\ngist.create({\n   public: true,\n   description: 'My first gist',\n   files: {\n      \"file1.txt\": {\n         contents: \"Aren't gists great!\"\n      }\n   }\n}).then(function(httpResponse) {\n   // Promises!\n   var gist = httpResponse.data;\n   gist.read(function(err, gist, xhr) {\n      // if no error occurred then err == null\n\n      // gist == httpResponse.data\n\n      // xhr == httpResponse\n   });\n});\n```\n\n```javascript\nvar GitHub = require('github-api');\n\n// basic auth\nvar gh = new GitHub({\n   username: 'FOO',\n   password: 'NotFoo'\n});\n\nvar me = gh.getUser();\nme.getNotification(function(err, notifcations) {\n   // do some stuff\n});\n\nvar clayreimann = gh.getUser('clayreimann');\nclayreimann.getStarredRepos()\n   .then(function(httpPromise) {\n      var repos = httpPromise.data;\n   });\n```\n\n```javascript\nvar GitHub = require('github-api');\n\n// token auth\nvar gh = new GitHub({\n   token: 'MY_OAUTH_TOKEN'\n});\n\nvar yahoo = gh.getOrganization('yahoo');\nyahoo.getRepos(function(err, repos) {\n   // look at all the repos!\n})\n```\n\n[codecov]: https://codecov.io/github/michael/github?branch=master\n[docs]: http://michael.github.io/github/\n[gitter]: https://gitter.im/michael/github\n[npm-package]: https://www.npmjs.com/package/github-api/\n[npmcdn]: https://npmcdn.com/github-api/\n[prose]: http://prose.io\n[travis-ci]: https://travis-ci.org/michael/github\n[xhr-link]: http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx\n",
  "_id": "github-api@2.0.0",
  "_from": "github-api@"
}
